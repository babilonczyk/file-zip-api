---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/sign_up":
    post:
      summary: Sign up a new user
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: User created successfully
        '422':
          description: Validation errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                  required:
                  - email
                  - password
                  - password_confirmation
              required:
              - user
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: Returns a JWT token for valid credentials
        '401':
          description: Invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/api/v1/auth/sign_out":
    delete:
      summary: Sign out a user
      tags:
      - Authentication
      security:
      - bearer_auth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
          example: Bearer <YOUR_JWT_TOKEN>
        required: true
        description: Bearer token for authorization
      responses:
        '200':
          description: User logged out successfully
        '401':
          description: Unauthorized
  "/api/v1/files":
    get:
      summary: Retrieve all files for authenticated user
      tags:
      - Uploads
      security:
      - bearer_auth: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
          example: Bearer <YOUR_JWT_TOKEN>
        required: true
        description: Bearer token for authorization
      responses:
        '200':
          description: Returns list of files
        '401':
          description: Unauthorized
    post:
      summary: Create a new file upload
      tags:
      - Uploads
      security:
      - bearer_auth: []
      parameters:
      - name: name
        in: string
        required: true
        description: Name (used for final zip)
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
          example: Bearer <YOUR_JWT_TOKEN>
        required: true
        description: Bearer token for authorization
      responses:
        '201':
          description: File created
        '401':
          description: Unauthorized
        '400':
          description: Name is missing
        '422':
          description: Upload limit or validation error
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: file
        required: true
        description: File to be uploaded
  "/api/v1/files/{idx}":
    delete:
      summary: Delete a file by its prefix ID
      tags:
      - Uploads
      security:
      - bearer_auth: []
      parameters:
      - name: idx
        in: path
        required: true
        description: File prefix ID
        schema:
          type: string
      - name: Authorization
        in: header
        schema:
          type: string
          example: Bearer <YOUR_JWT_TOKEN>
        required: true
        description: Bearer token for authorization
      responses:
        '200':
          description: File deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: File not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
